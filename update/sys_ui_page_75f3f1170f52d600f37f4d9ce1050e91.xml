<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>general</category>
        <client_script><![CDATA[var commandFlow = [
    {
        "id": "ab0d29be.8308e8",
        "type": "function",
        "z": "90b668b7.6b07c8",
        "name": "++",
        "func": "if ( (msg.i += 1) != msg.items.length ) return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 290.765625,
        "y": 620,
        "wires": [
            [
                "43144df6.78d1c4"
            ]
        ]
    },
    {
        "id": "891791f0.6e33",
        "type": "inject",
        "z": "90b668b7.6b07c8",
        "name": "Define Globals.",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "x": 138.765625,
        "y": 20,
        "wires": [
            [
                "8f1ab782.e06f48"
            ]
        ]
    },
    {
        "id": "d6f293ee.d26d5",
        "type": "http request",
        "z": "90b668b7.6b07c8",
        "name": "Create Server on SN",
        "method": "POST",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 629.765625,
        "y": 54,
        "wires": [
            [
                "22c889b3.8b0796"
            ]
        ]
    },
    {
        "id": "71b5a048.3e973",
        "type": "function",
        "z": "90b668b7.6b07c8",
        "name": "Format Payload",
        "func": "global.set('node_path',msg.payload);\nmsg.headers = global.get(\"headers\");\nmsg.url = global.get(\"instance\");\nmsg.url += '/api/x_8821_node/server/register';\nmsg.node = global.get('node');\nmsg.node.serial = global.get('serial');\nmsg.node.status = 'up';\nmsg.payload = msg.node;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 621.765625,
        "y": 20,
        "wires": [
            [
                "d6f293ee.d26d5",
                "c30dac5d.12606"
            ]
        ]
    },
    {
        "id": "bc4edbbf.db8a78",
        "type": "exec",
        "z": "90b668b7.6b07c8",
        "command": " ",
        "addpay": true,
        "append": "",
        "useSpawn": false,
        "name": " Run command",
        "x": 609.765625,
        "y": 451,
        "wires": [
            [
                "453570df.1b001",
                "9ed1e49.0ee2218"
            ],
            [],
            []
        ]
    },
    {
        "id": "43144df6.78d1c4",
        "type": "function",
        "z": "90b668b7.6b07c8",
        "name": "07.for each item",
        "func": "if( msg.i == undefined ) {\n msg.i = 0;\n}\nif( msg.items == undefined ) {\n //msg.items = msg.payload;\n// msg.items = msg.payload.result;\n  msg.items = msg.payload.queue;\n}\n\nmsg.payload = msg.items[ msg.i ];\nmsg.cli = msg.items[msg.i].cli;\nmsg.command = msg.items[ msg.i ].command;\nmsg.sys_id = msg.items[ msg.i ].sys_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 351.765625,
        "y": 286,
        "wires": [
            [
                "4868778c.d1ac58"
            ]
        ]
    },
    {
        "id": "4868778c.d1ac58",
        "type": "change",
        "z": "90b668b7.6b07c8",
        "name": "08.set command",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "command",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 587.765625,
        "y": 296,
        "wires": [
            [
                "67ba7f32.18f38"
            ]
        ]
    },
    {
        "id": "ffc699f7.34fae8",
        "type": "http request",
        "z": "90b668b7.6b07c8",
        "name": "13.Update Queue record",
        "method": "PUT",
        "ret": "obj",
        "url": "",
        "x": 582.765625,
        "y": 540,
        "wires": [
            [
                "ab0d29be.8308e8",
                "60112594.9c6b5c"
            ]
        ]
    },
    {
        "id": "453570df.1b001",
        "type": "function",
        "z": "90b668b7.6b07c8",
        "name": "12.Set record to 'executed'",
        "func": "function pad(a){\nvar n = a.toString();\nconsole.log('n('+n.length+'): ' + n);\nif(n.length === 1){\nn = '0' + n;\nconsole.log('n -> ' + n);\n}\nreturn n;\n}\nvar d = new Date();\nmsg.payload = {\n 'status':'executed',\n 'processed':d.getFullYear() + '-' + pad((d.getMonth()+1)) + '-' + pad(d.getDate()) + ' ' + pad(d.getHours()) + ':' + pad(d.getMinutes()) + ':' + pad(d.getSeconds()),\n 'response':msg.payload,\n 'server':msg.server\n};\nmsg.headers = global.get(\"headers\");\nmsg.url = global.get(\"instance\");\nmsg.url += '/api/now/table/x_8821_node_queue/';\nmsg.url += msg.sys_id + '?sysparm_fields=';\nmsg.url += 'status,response,server,processed';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 597.765625,
        "y": 501,
        "wires": [
            [
                "ffc699f7.34fae8",
                "82f21e0f.2d004"
            ]
        ]
    },
    {
        "id": "d306c2e3.a8aec",
        "type": "http request",
        "z": "90b668b7.6b07c8",
        "name": "10.Set to 'in progress'",
        "method": "PUT",
        "ret": "obj",
        "url": "",
        "x": 605.765625,
        "y": 370,
        "wires": [
            [
                "f8d8df5d.9ca2c",
                "deb78a65.431038"
            ]
        ]
    },
    {
        "id": "67ba7f32.18f38",
        "type": "function",
        "z": "90b668b7.6b07c8",
        "name": "09.Set payload to 'in progress'",
        "func": "function pad(a){\n  var n = a.toString();\n  if(n.length === 1){\n    n = '0' + n;\n  }\n  return n;\n}\nvar d = new Date();\nmsg.payload = {\n 'status':'in progress',\n 'queued':d.getFullYear() + '-' + pad((d.getMonth()+1)) + '-' + pad(d.getDate()) + ' ' + pad(d.getHours()) + ':' + pad(d.getMinutes()) + ':' + pad(d.getSeconds()),\n 'server':msg.server\n};\nmsg.headers = global.get(\"headers\");\nmsg.url = global.get(\"instance\");\nmsg.url += '/api/now/table/x_8821_node_queue/';\nmsg.url += msg.sys_id + '?sysparm_fields=';\nmsg.url += 'status,response,server,processed';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 602.765625,
        "y": 336,
        "wires": [
            [
                "d306c2e3.a8aec",
                "bdf0c2c1.de4fc"
            ]
        ]
    },
    {
        "id": "a77d85ec.b02a48",
        "type": "inject",
        "z": "90b668b7.6b07c8",
        "name": "Start Monitor",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "15",
        "crontab": "",
        "once": true,
        "x": 136.765625,
        "y": 162,
        "wires": [
            [
                "ae3dc9a1.086458"
            ]
        ]
    },
    {
        "id": "ae3dc9a1.086458",
        "type": "function",
        "z": "90b668b7.6b07c8",
        "name": "03.Format request",
        "func": "msg = {\n headers: global.get(\"headers\")\n};\nmsg.url = global.get(\"instance\");\nmsg.url += '/api/x_8821_node/server/all?';\nmsg.url += 'name='+ global.get(\"node\").name;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 346.765625,
        "y": 163,
        "wires": [
            [
                "5ea1638b.194a2c",
                "7dad2b8a.53cfc4"
            ]
        ]
    },
    {
        "id": "5ea1638b.194a2c",
        "type": "http request",
        "z": "90b668b7.6b07c8",
        "name": "04.Get all the things!",
        "method": "GET",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 352.765625,
        "y": 202,
        "wires": [
            [
                "a4c37790.0ed478",
                "4e40b85a.ade648"
            ]
        ]
    },
    {
        "id": "a4c37790.0ed478",
        "type": "switch",
        "z": "90b668b7.6b07c8",
        "name": "06.No Results?",
        "property": "payload.queue.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 357.765625,
        "y": 247,
        "wires": [
            [],
            [
                "43144df6.78d1c4"
            ]
        ]
    },
    {
        "id": "8f1ab782.e06f48",
        "type": "change",
        "z": "90b668b7.6b07c8",
        "name": "Configuration",
        "rules": [
            {
                "t": "set",
                "p": "instance",
                "pt": "global",
                "to": "https://dev17279.service-now.com",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "global",
                "to": " {\"Authorization\":\"Basic c3lzLm5vZGU6bm9kZTE=\",\"Content-type\" : \"application/json\",  \"Accept\": \"application/json\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 144.765625,
        "y": 53,
        "wires": [
            [
                "9af839a4.d875d8"
            ]
        ]
    },
    {
        "id": "4e8611df.9c0bc",
        "type": "function",
        "z": "90b668b7.6b07c8",
        "name": "Save OS Info",
        "func": "msg.node = JSON.parse(msg.payload);\nglobal.set('node',msg.node);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 364.765625,
        "y": 20,
        "wires": [
            [
                "542ce265.63a41c"
            ]
        ]
    },
    {
        "id": "9af839a4.d875d8",
        "type": "exec",
        "z": "90b668b7.6b07c8",
        "command": "node -e \"var os = require('os');var returnObj = {  platform: os.platform(),  release: os.release(),  arch: os.arch(),  cpus: os.cpus(),  memfree  : os.freemem(),  memtotal : os.totalmem(),  type: os.type,  uptime: os.uptime(),  nics: os.networkInterfaces(), name: os.hostname()};console.log(JSON.stringify(returnObj));\"",
        "addpay": true,
        "append": "",
        "useSpawn": "",
        "name": "Get OS Details",
        "x": 139.765625,
        "y": 93,
        "wires": [
            [
                "4e8611df.9c0bc"
            ],
            [],
            []
        ]
    },
    {
        "id": "c30dac5d.12606",
        "type": "debug",
        "z": "90b668b7.6b07c8",
        "name": "msg",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 808.765625,
        "y": 20,
        "wires": []
    },
    {
        "id": "f8d8df5d.9ca2c",
        "type": "function",
        "z": "90b668b7.6b07c8",
        "name": "Build command",
        "func": "if(msg.cli === 'bash/CMD'){\n    msg.payload = msg.command;\n}\nif(msg.cli === 'Node.js CLI'){\n    msg.payload = 'node -e\"' + msg.command + '\"';\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610.765625,
        "y": 409.5,
        "wires": [
            [
                "bc4edbbf.db8a78",
                "2222e86f.3a5088"
            ]
        ]
    },
    {
        "id": "542ce265.63a41c",
        "type": "exec",
        "z": "90b668b7.6b07c8",
        "command": "echo \"'$(npm root -g)\"'",
        "addpay": true,
        "append": "",
        "useSpawn": "",
        "name": "get node path",
        "x": 357.765625,
        "y": 93.5,
        "wires": [
            [
                "71b5a048.3e973"
            ],
            [],
            []
        ]
    },
    {
        "id": "22c889b3.8b0796",
        "type": "debug",
        "z": "90b668b7.6b07c8",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 803.63671875,
        "y": 62.03515625,
        "wires": []
    },
    {
        "id": "4e40b85a.ade648",
        "type": "debug",
        "z": "90b668b7.6b07c8",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 858.63671875,
        "y": 191.046875,
        "wires": []
    },
    {
        "id": "deb78a65.431038",
        "type": "debug",
        "z": "90b668b7.6b07c8",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 859.6328125,
        "y": 362.04296875,
        "wires": []
    },
    {
        "id": "bdf0c2c1.de4fc",
        "type": "debug",
        "z": "90b668b7.6b07c8",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 868.63671875,
        "y": 308.046875,
        "wires": []
    },
    {
        "id": "7dad2b8a.53cfc4",
        "type": "debug",
        "z": "90b668b7.6b07c8",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 862.640625,
        "y": 155.04296875,
        "wires": []
    },
    {
        "id": "60112594.9c6b5c",
        "type": "debug",
        "z": "90b668b7.6b07c8",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 853.625,
        "y": 532.046875,
        "wires": []
    },
    {
        "id": "82f21e0f.2d004",
        "type": "debug",
        "z": "90b668b7.6b07c8",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 854.63671875,
        "y": 490.0390625,
        "wires": []
    },
    {
        "id": "9ed1e49.0ee2218",
        "type": "debug",
        "z": "90b668b7.6b07c8",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 858.640625,
        "y": 434.0390625,
        "wires": []
    },
    {
        "id": "2222e86f.3a5088",
        "type": "debug",
        "z": "90b668b7.6b07c8",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 855.625,
        "y": 400.03515625,
        "wires": []
    }
];
	jQuery('#commandFlow').text(JSON.stringify(commandFlow));]]></client_script>
        <description/>
        <direct>false</direct>
        <endpoint>x_8821_node_readme.do</endpoint>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">
To get this working you'll need a server/computer you can install <a href="https://nodejs.org/en/">node.js</a> on and <a href="http://nodered.org/">node-red</a> on.  Once installed, run node-red, then navigate to the server's ip address + :1880 (e.g. 192.168.1.10:1880).  Press "Ctrl+I" and paste the register command from this article.  Modify the config box to have your instance, and basic authorization (user will need the *node role.  Click the input square to register your server.  Check that the server is now listed in the Node-Red application servers.  Go back to the node-red page (192.168...:1880) and add a new flow.  Copy the Command flow from here and do a (Ctrl+I) to bring that in.  Again modify the config block with your basic authorization.  That's it your done.  If a server appears offline, change the status to "Up" a heartbeat message will be sent every minute to verify ther server is up.  Clustering works as you would expect it would.
	<br/>
	<br/>
User:	sys.node<br/>
Pass:	sys.node<br/>
	<br/>
	
	Register NodeRed Server<br />
	<div id="registerflow"
		 style="
			font-family:  monospace;
			background-color: grey;
			color: white;
			padding: 10px;
			margin: 10px;
	"></div>
	Run Commands from Instances<br />
	<div id="commandFlow"
		 style="
			font-family:  monospace;
			background-color: grey;
			color: white;
			padding: 10px;
			margin: 10px;
	"></div>
</j:jelly>]]></html>
        <name>readme</name>
        <processing_script/>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>admin_SHARE</sys_created_by>
        <sys_created_on>2016-03-26 20:49:04</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>75f3f1170f52d600f37f4d9ce1050e91</sys_id>
        <sys_mod_count>33</sys_mod_count>
        <sys_name>readme</sys_name>
        <sys_package display_value="Node-Red" source="x_8821_node">bceee1930f52d600f37f4d9ce1050e43</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Node-Red">bceee1930f52d600f37f4d9ce1050e43</sys_scope>
        <sys_update_name>sys_ui_page_75f3f1170f52d600f37f4d9ce1050e91</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-01-26 05:11:16</sys_updated_on>
    </sys_ui_page>
</record_update>
